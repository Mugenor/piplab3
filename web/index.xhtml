<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://xmlns.jcp.org/jsf/html"
      xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
      xmlns:f="http://xmlns.jcp.org/jsf/core"
      xmlns:ace="http://www.icefaces.org/icefaces/components">
    <h:head>
        <link rel="shortcut icon" href="favicon.png" type="image/png" />
        <title>Special For You</title>
        <h:outputStylesheet>
            body {
                background-image: url(767.jpg);
                background-attachment: fixed;
                background-size: 100%;
            }

            header {
                text-align: right;
                background: url(ocean4.jpg) center bottom;
                font-family: fantasy;
                color: #b5fff8;
                outline: 3px solid #000000;
                border: 3px solid #fff;
                padding-bottom: 0.4%;
                padding-right: 1.5%;
            }

            #name {
                font-size: 270%;
            }

            #group {
                font-size: 150%;
            }

            #right {
                float: right;
                margin-top: 8px;
                width: 22%;
                color: #001379;
            }
            .begin {
                width: 100%;
                outline: 3px solid #000000;
                border: 3px solid #fff;
                background: #b5fff8;
                font-size: 12pt;
                color: #001379;
                margin-top: 4px;
            }

            .table {
                width: 100%;
                background: url(ocean9.jpg);
                outline: 3px solid #000000;
                border: 3px solid #fff;
                margin-top: 8px;
            }

            .pseudo {
                hidden: true;
            }
            canvas{
                float: left;
            }
        </h:outputStylesheet>
    <h:outputScript>
        function changeX(x) {
            document.getElementById('form:pseudoX').value=x.toString();
        }
        function changeR() {
            var r = document.getElementById('form:r_hidden').value;
            document.getElementById('form:pseudoR').value=r;
        }
    </h:outputScript>
    </h:head>
    <h:body>
        <header>
            <h:outputLabel id="clock"/>
            <div id="name">
                Чернов Илья, Клокова Елизавета
            </div>
            <div id="group">
                P3211, вариант 372
            </div>
        </header>
        <h:form id="form">
        <div id="right">
            <audio controls="x">
                <source src="ariel.mp3" type="audio/mp3"/>
            </audio>
            <h:commandButton class="begin" action="toBeginning" value="To beginning page"/>
            <h:dataTable id="table" class="table" value="#{controller.points}" var="o" border="1">
                <h:column>
                    <f:facet name="header">X</f:facet>
                    #{o.x}
                </h:column>
                <h:column>
                    <f:facet name="header">Y</f:facet>
                    #{o.y}
                </h:column>
                <h:column>
                    <f:facet name="header">R</f:facet>
                    #{o.r}
                </h:column>
                <h:column>
                    <f:facet name="header">Is Hitted</f:facet>
                    #{o.hitted}
                </h:column>
            </h:dataTable>
        </div>
            <div>
                <h:commandButton onclick="changeX(-2.0);" value="-2.0"/>
                <h:commandButton onclick="changeX(-1.5);" value="-1.5"/>
                <h:commandButton onclick="changeX(-1.0);" value="-1.0"/>
                <h:commandButton onclick="changeX(-0.5);" value="-0.5"/>
                <h:commandButton onclick="changeX(0.0);" value="0.0"/>
                <h:commandButton onclick="changeX(0.5);" value="0.5"/>
                <h:commandButton onclick="changeX(1.0);" value="1.0"/>
                <h:commandButton onclick="changeX(1.5);" value="1.5"/>
                <h:commandButton onclick="changeX(2.0);" value="2.0"/>
            </div>
            <h:inputText id="y" value="#{controller.point.y}" rendered="true" required="true"
                         requiredMessage="required" converterMessage="not a valid number" validatorMessage="from -3 to 5">
                <f:validateLength minimum="1" maximum="5"/>
                <f:validateDoubleRange minimum="-3.0" maximum="5.0"/>
            </h:inputText>
            <h:message id="mesY" for="y"/>
            <br/>
            <ace:sliderEntry onSlideEnd="changeR(); repaintCanvas();" id="r" length="100px" min="1" max="4" stepPercent="16.6666666666666666666" showLabels="true"/>
            <h:commandButton id="addButton" value="Add point">
                <f:ajax onevent="addPoint" event="click" execute="pseudoX y pseudoR" listener="#{controller.addPoint}" render="table mesX mesY mesR"/>
            </h:commandButton><br/>
            <h:inputText id="pseudoX" styleClass="pseudo" value="#{controller.point.x}" rendered="true" required="true"
                         requiredMessage="required" converterMessage="not a valid number" validatorMessage="from -2 to 2">
                <f:validateLength minimum="1" maximum="5"/>
                <f:validateDoubleRange minimum="-2.0" maximum="2.0"/>
            </h:inputText>
            <h:message id="mesX" for="pseudoX"/>
            <br/>
            <h:inputText id="pseudoR" styleClass="pseudo" value="#{controller.point.r}" rendered="true" required="true"
                         requiredMessage="required" converterMessage="not a valid number" validatorMessage="from 1 to 4">
                <f:validateLength minimum="1" maximum="5"/>
                <f:validateDoubleRange minimum="1.0" maximum="4.0"/>
            </h:inputText>
            <h:message for="pseudoR" id="mesR"/>
            <br/>
        </h:form>
        <canvas id="canvas" width="400px" height="300px"/>
    <h:outputScript>
        function contains(str, char){
            for(var i=0;str.length>i;i++){
                if(str.charAt(i) == char) return true;
            }
            return false;
        }
        var canvas = document.getElementById("canvas");
        var ctx = canvas.getContext('2d');
        var mult = canvas.width/15;
        var halfX = canvas.width/2;
        var halfY = canvas.height/2;
        function printPoint(x, y, color){
            x = Number(x);
            y = Number(y);
            ctx.beginPath();
            ctx.moveTo(canvas.width/2.0 + x * mult, canvas.height/2.0 - y * mult);
            ctx.fillStyle = color;
            ctx.arc(canvas.width/2.0 + x * mult, canvas.height/2.0 - y * mult, 4, 0, 2.0 * Math.PI, true);
            ctx.fill();
            ctx.closePath();
        }
        function axis(x, y) {
            ctx.moveTo(halfX, halfY);
            ctx.lineTo(x, y);
        }
        var printCanvas = function (valueR) {
            var padXS = canvas.width/10;
            var padYS = canvas.height/10;
            var padXsmall = canvas.width/25;
            var padYsmall = canvas.height/20;
            ctx.beginPath();
            ctx.fillStyle = "white";
            ctx.fillRect(0, 0, canvas.width, canvas.height);
            ctx.closePath();
            ctx.fillStyle = "#22b9ff";
            ctx.strokeStyle = "#22b9ff";
            ctx.beginPath();
            ctx.moveTo(halfX, halfY);
            ctx.lineTo(halfX, halfY - valueR*mult/2.0);
            ctx.lineTo(halfX - valueR*mult, halfY);
            ctx.lineTo(halfX,halfY);
            ctx.rect(halfX - valueR*mult, halfY, valueR*mult, valueR*mult/2.0);
            ctx.moveTo(halfX, halfY);
            ctx.arc(halfX, halfY, valueR*mult, 1/2*Math.PI, 0, true);
            ctx.stroke();
            ctx.fill();
            ctx.closePath();
            ctx.beginPath();
            ctx.fillStyle = "black";
            ctx.strokeStyle = "black";
            axis(halfX, padYsmall);
            ctx.lineTo(halfX - 3, padYS);
            ctx.moveTo(halfX, padYsmall);
            ctx.lineTo(halfX + 3, padYS);
            axis(halfX, canvas.height - padYsmall);
            axis(padXS, halfY);
            axis(canvas.width - padXS, halfY);
            ctx.lineTo(canvas.width - padXS - padXsmall, halfY - 3);
            ctx.moveTo(canvas.width - padXS, halfY);
            ctx.lineTo(canvas.width - padXS - padXsmall, halfY + 3);
            ctx.stroke();
            ctx.font = "11pt Arial";
            ctx.fillText("X", canvas.width - padXS - padXsmall + 3, halfY + padYsmall);
            ctx.fillText("Y", halfX - padXsmall + 3, padYS - 3);
            ctx.closePath();
            ctx.fillStyle = "black";
            ctx.strokeStyle = "black";
            ctx.font = (valueR*5.5 > 11) ? "11pt Arial" : valueR*5.5 + "pt Arial";
           // ctx.font = (valueR*5.5 ? 7) ? "10pt Arial" : valueR*5.5 + "pt Arial";
            //КАК ИСПОЛЬЗОВАТЬ ЗНАК МЕНЬШЕ В JSF?
            ctx.fillText("0", halfX - valueR*5, halfY + valueR*7);
            ctx.fillText(valueR/2, halfX - valueR*2 + valueR/2.0*mult, halfY + valueR*7);
            ctx.fillText(valueR, halfX - valueR*2 + valueR*mult, halfY + valueR*7);
            ctx.fillText(valueR, halfX + valueR*2, halfY + valueR*3 - valueR*mult);
            ctx.fillText(valueR/2, halfX + valueR*2, halfY + valueR*3 - valueR*mult/2);
            ctx.fillText(-valueR, halfX - valueR*5 - valueR*mult, halfY + valueR*7);
            ctx.fillText(-valueR/2, halfX - valueR*5 - valueR/2*mult, halfY + valueR*7);
            ctx.fillText(-valueR, halfX + valueR*2, halfY + valueR*2 + valueR*mult);
            ctx.fillText(-valueR/2, halfX + valueR*2, halfY + valueR*2 + valueR*mult/2);
            ctx.moveTo(halfX - valueR*mult, halfY - 3);
            ctx.lineTo(halfX - valueR*mult, halfY + 3);
            ctx.moveTo(halfX - valueR/2*mult, halfY - 3);
            ctx.lineTo(halfX - valueR/2*mult, halfY + 3);
            ctx.moveTo(halfX + valueR/2*mult, halfY - 3);
            ctx.lineTo(halfX + valueR/2*mult, halfY + 3);
            ctx.moveTo(halfX + valueR*mult, halfY - 3);
            ctx.lineTo(halfX + valueR*mult, halfY + 3);
            ctx.moveTo(halfX - 3, halfY - valueR*mult);
            ctx.lineTo(halfX + 3, halfY - valueR*mult);
            ctx.moveTo(halfX - 3, halfY - valueR/2*mult);
            ctx.lineTo(halfX + 3, halfY - valueR/2*mult);
            ctx.moveTo(halfX - 3, halfY + valueR/2*mult);
            ctx.lineTo(halfX + 3, halfY + valueR/2*mult);
            ctx.moveTo(halfX - 3, halfY + valueR*mult);
            ctx.lineTo(halfX + 3, halfY + valueR*mult);
            ctx.stroke();
        };
        window.onload = function(){
            repaintCanvas();
        }
        var addPointButton = document.getElementById("form:addButton");
        canvas.onclick = function (event) {
            alert('onclick');
            var x = (event.offsetX-canvas.width/2)/(canvas.width/10);
            var y = (event.offsetY-canvas.height/2)/(-canvas.width/10);
            var oldX = document.getElementById('form:pseudoX').value;
            var oldY = document.getElementById('form:y').value;
            document.getElementById('form:pseudoX').value = x;
            document.getElementById('form:y').value = y;
            //ПРИСВОИТЬ ПОЛЯМ X Y КООРДИНАТЫ ТОЧЕК
            addPointButton.click();
            addPoint({"status":"success"});
            document.getElementById('form:pseudoX').value = x;
            document.getElementById('form:y').value = y;
            //НАРИСОВАТЬ ТОЧКУ
            //ВЕРНУТЬ ПОЛЯМ X Y СТАРЫЕ ЗНАЧЕНИЯ
        }
        function repaintCanvas() {
            var currentR = Number(document.getElementById('form:pseudoR').value);
            printCanvas(currentR);
            var points = document.getElementById('table').lastElementChild.children;
            var r;
            for(var i=0;points.length>i;i++){
                r = Number(points[i].children[2].innerHTML);
                if(r == currentR){
                    printPoint(points[i].children[0].innerHTML, points[i].children[1].innerHTML, contains(points[i].children[3].innerHTML, 't') ? 'green' : 'red');
                }
            }
        }
        function addPoint(data) {
            var status = data.status;
            switch(status){
                case "success":
                    var lastLine = document.getElementById('table').lastElementChild.lastElementChild;
                    var thisX = lastLine.children[0].innerHTML;
                    var thisY = lastLine.children[1].innerHTML;
                    var thisIsHitted = lastLine.children[3].innerHTML;
                    printPoint(thisX, thisY, contains(thisIsHitted, 't') ? 'green' : 'red');
                    break;
            }
        }
    </h:outputScript>

</h:body>
</html>
